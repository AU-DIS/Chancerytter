name: Testing

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2
                  

     # - name: Download and install Boost
     # uses: MarkusJx/install-boost@v2.4.4
      #id

    - name: Install boost for Linux
      run: |
        #sudo apt-get update
        sudo apt-get install libboost-all-dev
      if: runner.os == 'Linux'
      
    - name: Install boost for MacOS
      run: |
        #brew upgrade
        brew install boost
      if: runner.os == 'macOS'

    - name: Configure
      run: |
        cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      run: |
        cmake --build build --config Debug

    - name: Test
      run: |
        cd build
        ctest -C Debug --output-on-failure --verbose

    - name: Setup python
      uses: actions/setup-python@v2
      if: contains(matrix.os, 'ubuntu')
      with:
        python-version: 3.8

    - name: Upload code coverage to coveralls
      if: contains(matrix.os, 'ubuntu')
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip setuptools cpp-coveralls
        coveralls -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" --exclude "venv" --exclude "build/_deps"
